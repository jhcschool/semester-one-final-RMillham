// SET UP//
class drawing_letters {
  float x;
  float y;
  float w = 20;
  float h = 20;
  float x_speed = 2;
  float y_speed = 2;
  float angle;
  float angle_speed = 0.03;

  drawing_letters (float _x, float _y) {
    x = _x;
    y = _y;
  }

  void draw_the_ball () {
    fill(255, 255, 255);
    ellipse(x, y, w, h);
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


 //                                                     R Inital


  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  void r_intial() {
    draw_the_ball();
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Step 1 Drawing the back of the R
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    // Going down
    if (x==100) { // x = 100 is the starting point of the ball
      y += y_speed;

      //going up
      if ( y == 350) {
        y_speed = -y_speed;
        y++; // adding 1 so it skips the diagnal spike of the R
      }
    }
    
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Step 2 Drawing the Diagnal Spike
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //House keeping to make the following if statment true.
    if (y == 250 && x == 100) { // Pushes the ball two over in both directions, now it fullfil the next if statment
      y += 2;
      x += 2;
    }

    //Moving the ball diagnaly down the spike of the R...
    if (y > 250 && x > 100) {//defines a quadrent where this comand can actually run. When it basses this poing on the way back its perfect
      x += x_speed; // always run when the ball is going down the spike.
      y += y_speed;
      
    //switching the direction of the ball. Moves back up the diagnal spike
      if (x == 200) {
        x_speed = -x_speed; // this makes the x_speed and y_speed negitive, switching the direction of the ball
        y_speed = -y_speed;
      }
      
      //House Keeping
      if (x == 100) { // makes the x_speed and y_speed negative again, meaning Step 1 still works.
        x_speed = -x_speed;
        y_speed = -y_speed;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 3 SPINING THE BALL FOR THE CURVE OF THE R.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // House Keeping //
    if (y == 135 ) {// top of the back side of the R. +35 is so that the curve looks more proportional
      x += x_speed; //makes the ball enter the right quadent for the following if statment to be true.
      x_speed = 0;
      y_speed = 0; // stops further movement
    }


    ///////////Rotates the ball around ///////////////
    if (y < 250 && x > 100) { //defining another quadrent where this command always runs.
      angle += angle_speed; // best matches the speed
      translate(102, 210);
      rotate(angle);
      ellipse(0, -75, 20, 20);
      rotate(-1 * angle); // stops the rest of the balls from rotating.
      translate(-102, -210);//stops the M and W from being affected by the translation.
      if (angle > 4*PI /5) {
        angle = 0; //brings it back to the top of the curve

      }
    }
  }


  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  //                                                      W Inital

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  void w_intial() {
    draw_the_ball(); // draws the ball

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 1 Drawing the left leg of the W stright down.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if (x == 300) {// intial leg of the W. It immediatly goes down 
      y = y + y_speed; //because if statment is true where it spawns.
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 2 Drawing the bottom of the W
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if (y == 350) { // left foot of the W, stops downward progress, then sends the ball to the right.
      x = x + x_speed; // also works for the other side of the spike of the W.
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 3 Drawing the middle spike of the W
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    if (x == 370) {//stops it at where the spike of the W goes, sends it up.
      y -= y_speed; // always true at this point
      //////////////// reverse the movment ///////////////////
      if (y == 300 && x == 370) { // at exactly the point I want it to stop
        y_speed = -y_speed; // reverses the firection
      }
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 4 Drawing the far right leg of the W.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   
    if (x == 430) {
      y += y_speed;// Draws the right leg of the W
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 5 Stoping movement
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
    if (x == 430 && y == 200) {//stops all progress where I want the end of the W to be.
      x_speed = 0;
      y_speed = 0;
    }
  }





  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  //                                                  DRAWING M Intial

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  


  void m_intial() {
    draw_the_ball();//draws the inital ball and colors.

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 1 Drawing the left most leg of the M
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     
    // sending it down //
    if (x == 500) { //imediatly true
      y += y_speed; // goes down

      //Sending it back up //
      if (y == 348) {//when it is at this point I set y_speed to negitive so it subtracts, the y<350 if statment is still true,
        y_speed = -y_speed;
      }
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 2 Drawing the top of the M
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    if (y == 200) {//sends it on the left roof of the M, and once it makes the spike of the M
      x += x_speed;//it continues left to right, because the if condtion becomes true.
    }   

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 3 Drawing the spike of the M
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    if (x == 570) {
      if (y < 300) { // sending it down
        y -= y_speed;//has to subtraction because the Y speed was made negative in the reversing of the first leg of the M.
      }              // Y is gettting bigger

      // reversing the movment //
      if (y == 298) {
        y_speed = -y_speed; // makes it negative again, the y is getting smaller at this point
      }
    }
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 4 Drawing the right leg of the M
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    if (x == 640) {//sends it down the final spike, far right.
      y += y_speed;//Y is getting bigger
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //STEP 5 Stoping all the movement then Reseting
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    if (y == 350) {
      y_speed = 0;//stops all movement at the bottom.
      x_speed = 0;
      delay(2000); //pausing the progtram before restaring
      setup();//resart command
    }
  }
}
